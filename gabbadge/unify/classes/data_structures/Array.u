class Array : DataType {
	/*inline get (Int index){
		*//**
		*  This means that this section of inline would be done only
		*  If the compiler meets an Identifier instead of integer
		*  This is like custom optimizations
		*  This is also because the compiler will check the length of
		*  the array before allowing access of
		*  keys that are not available thus access
		*  checks will be done both compile time or run time
		*//*

		@IdentifierOnCallOnly {
				index > length || index < 0 => throw "Array index out of bounds array has only $length key" + length > 1 ? 's':''
		}

		return a[index]
	}*/


	// TODO
	/**
	Add starting memory location address to this
	and return the value of that address
	*/
	Any get(Int index){

	}

	Boolean infix Int index in => length > index >= 0

	// checks if a value is set for a key provided
	infix Boolean index isSet => isDefined this[index]


	T set(Int index, Object value){
		return value
	}

}




